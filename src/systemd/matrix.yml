---
# General variables for the generator role
type: systemd
repo_root: "{{ lookup('env', 'PWD') }}"

template_src_dir: "src/{{ type }}"
CF_template_src_path: "{{ template_src_dir }}/ContainerFile.j2"
CF_output_dir: "ContainerFiles/{{ type }}/{{ distro['name'] }}"
CF_output_path: "{{ CF_output_dir }}/{{ distro['name'] }}.{{ output['galaxy_version'] }}.ContainerFile"

CI_template_src_path: "{{ template_src_dir }}/ci.yml.j2"
CI_output_path: ".github/workflows/{{ type }}-{{ distro['name'] }}.{{ output['galaxy_version'] }}-ci.yml"
CI_image_repo: "quay.io/gotmax23/{{ distro['name'] | lower}}-{{ type }}"
CI_image_tags:
  - "{{ CI_IMAGE_REPO }}:{{ output['galaxy_version'] }}"

##########
# Variables used inside ContainerFile.j2

# These variables are generated at runtime based on the following hierarchy (higher # = higher priority):
# 1. Variables in `defaults.vars`
# 2. Variables under `distro_families.NAME`
# 3. Variables under `distros.*.vars`
# 4. Variables under `distros.*.outputs.*.vars`

all_vars_list:
  - python_version
  - packages
  - package_mgr_name
  - package_mgr_install_cmd
  - package_mgr_clean_cmd
  - baseimage_repo
  - baseimage
  - docker_cmd
  - docker_stopsignal
  - docker_platforms
  - default_packages
  - extra_ci_image_tags

##########
all_packages: "{{ DEFAULT_PACKAGES + PACKAGES }}"
all_CI_image_tags: "{{ CI_IMAGE_TAGS + EXTRA_CI_IMAGE_TAGS }}"
defaults:
  vars:
    python_version: "3"
    docker_cmd: "/sbin/init"
    docker_stopsignal: "SIGRTMIN+3"
    docker_platforms:
      - linux/amd64
      - linux/arm64
    default_packages:
      - systemd
      - "python{{ PYTHON_VERSION }}"
      - sudo
    baseimage: "{{ BASEIMAGE_REPO }}:{{ GALAXY_VERSION }}"
    CI_image_repo: "quay.io/gotmax23/{{ distro['name'] | lower}}-{{ type }}"
    CI_image_tags:
      - "{{ CI_IMAGE_REPO }}:{{ output['galaxy_version'] }}"
    extra_ci_image_tags: []

distro_families:
  Debian:
    vars:
      package_mgr_name: apt
      package_mgr_install_cmd: "apt-get update && apt-get install -y --no-install-recommends"
      package_mgr_clean_cmd: "apt-get clean"
      packages:
        - systemd-sysv
        - python3-apt

  RedHat:
    vars:
      package_mgr_name: dnf
      package_mgr_install_cmd: "{{ PACKAGE_MGR_NAME }} -y --setopt=tsflags=nodoc install"
      package_mgr_clean_cmd: "{{ PACKAGE_MGR_NAME | default('') }} clean all"
      packages: []

  opensuse:
    vars:
      package_mgr_name: zypper
      package_mgr_install_cmd: "zypper install -y"
      package_mgr_clean_cmd: "zypper clean"
      packages:
        - systemd-sysvinit

  Archlinux:
    vars:
      package_mgr_name: pacman
      package_mgr_install_cmd: "pacman -Syu --noconfirm && pacman -S --noconfirm"
      package_mgr_clean_cmd: "pacman -Scc"
      packages:
        - systemd-sysvcompat

##########

distros:
  - name: Archlinux
    distro_family: Archlinux
    vars:
      baseimage: docker.io/library/archlinux:base
      baseimage_repo: ''
    outputs:
      - galaxy_version: any
        vars:
          docker_platforms:
            - linux/amd64
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:latest"

  - name: Debian
    distro_family: Debian
    vars:
      baseimage_repo: docker.io/library/debian
    outputs:
      - galaxy_version: buster
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:latest"
            - "{{ CI_IMAGE_REPO }}:10"
            - "{{ CI_IMAGE_REPO }}:stable"
      - galaxy_version: bullseye
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:testing"

  - name: RedHat
    distro_family: RedHat
    vars:
      baseimage_repo: '' #This variable is not used for the UBI-based images"
    outputs:
      - galaxy_version: 7
        vars:
          baseimage: "registry.access.redhat.com/ubi7:latest"
          package_mgr_name: "yum"
          python_version: "2"
          docker_platforms:
            - linux/amd64
      - galaxy_version: 8
        vars:
          baseimage: "registry.access.redhat.com/ubi8:latest"
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:latest"

  - name: Fedora
    distro_family: RedHat
    vars:
      baseimage_repo: registry.fedoraproject.org/fedora
    outputs:
      - galaxy_version: 33
      - galaxy_version: 34
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:latest"
      - galaxy_version: rawhide

  - name: opensuse
    distro_family: opensuse
    vars:
      baseimage_repo: registry.opensuse.org/opensuse/leap
    outputs:
      - galaxy_version: 15.2
        vars:
          extra_ci_image_tags:
            - "quay.io/gotmax23/systemd-opensuse-leap:15.2"
      - galaxy_version: 15.3
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:latest"
            - "quay.io/gotmax23/systemd-opensuse-leap:15.3"
            - "quay.io/gotmax23/systemd-opensuse-leap:latest"

  - name: Ubuntu
    distro_family: Debian
    vars:
      baseimage_repo: docker.io/library/ubuntu
    outputs:
      - galaxy_version: bionic
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:18.04"
            - "{{ CI_IMAGE_REPO }}:18"
      - galaxy_version: focal
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:latest"
            - "{{ CI_IMAGE_REPO }}:20"
            - "{{ CI_IMAGE_REPO }}:20.04"
      - galaxy_version: hirsute
        vars:
          extra_ci_image_tags:
            - "{{ CI_IMAGE_REPO }}:21"
            - "{{ CI_IMAGE_REPO }}:21.04"
